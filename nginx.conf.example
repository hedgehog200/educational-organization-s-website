# Пример конфигурации Nginx для College System (Production)
# Скопируйте и адаптируйте под ваш сервер

# Upstream для Node.js приложения
upstream college_backend {
    server 127.0.0.1:3000;
    # Для нескольких инстансов (масштабирование):
    # server 127.0.0.1:3001;
    # server 127.0.0.1:3002;
    keepalive 64;
}

# Редирект с HTTP на HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name yourdomain.com www.yourdomain.com;
    
    # Перенаправление на HTTPS
    return 301 https://$server_name$request_uri;
}

# Основной сервер (HTTPS)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;

    # SSL Сертификаты (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/yourdomain.com/chain.pem;

    # SSL Настройки (современные и безопасные)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-src 'none'; object-src 'none';" always;

    # Логирование
    access_log /var/log/nginx/college_access.log;
    error_log /var/log/nginx/college_error.log warn;

    # Максимальный размер загружаемых файлов
    client_max_body_size 50M;
    client_body_buffer_size 50M;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # КРИТИЧНО: Блокировка доступа к базе данных
    location ~* \.(db|sqlite|sqlite3|db-journal|db-shm|db-wal)$ {
        deny all;
        return 403;
    }

    # Блокировка доступа к конфигурационным файлам
    location ~* \.(env|git|gitignore|htaccess|htpasswd)$ {
        deny all;
        return 403;
    }

    # Блокировка доступа к скрытым файлам
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 403;
    }

    # Блокировка доступа к директории node_modules
    location ~* /node_modules/ {
        deny all;
        return 403;
    }

    # Блокировка доступа к логам и бекапам
    location ~* /(logs|backups)/ {
        deny all;
        return 403;
    }

    # Статические файлы (CSS, JS, изображения)
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /var/www/college/frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Загруженные файлы пользователей
    location /uploads/ {
        alias /var/www/college/backend/uploads/;
        expires 1y;
        add_header Cache-Control "public";
        
        # Защита от выполнения скриптов
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
            return 403;
        }
    }

    # API запросы к Node.js
    location /api/ {
        proxy_pass http://college_backend;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_cache_bypass $http_upgrade;
        proxy_buffering off;
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Rate limiting (опционально, если не используется в приложении)
        # limit_req zone=api burst=20 nodelay;
    }

    # HTML страницы
    location / {
        root /var/www/college/frontend/public;
        try_files $uri $uri/ /index.html;
        
        # No-cache для HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Защищенные страницы (дополнительная проверка на сервере)
    location ~* ^/(lk|admin|teacher|usp|ych_mat|zadania|raspis)\.html$ {
        root /var/www/college/frontend/public;
        
        # No-cache
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Можно добавить дополнительную auth проверку
        # auth_request /api/auth/verify;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://college_backend/health;
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        root /var/www/college/frontend/public;
        access_log off;
        log_not_found off;
    }

    # Favicon
    location = /favicon.ico {
        root /var/www/college/frontend/public;
        access_log off;
        log_not_found off;
    }
}

# Rate Limiting Zones (раскомментируйте, если используете)
# http {
#     # Ограничение по IP для API
#     limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
#     
#     # Ограничение для аутентификации
#     limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
# }

# Дополнительные настройки безопасности для http блока
# (добавьте в /etc/nginx/nginx.conf)
#
# # Скрыть версию Nginx
# server_tokens off;
#
# # Ограничение размера буфера
# client_body_buffer_size 1K;
# client_header_buffer_size 1k;
# large_client_header_buffers 2 1k;
#
# # Защита от Slowloris
# client_body_timeout 10;
# client_header_timeout 10;
# keepalive_timeout 5 5;
# send_timeout 10;

