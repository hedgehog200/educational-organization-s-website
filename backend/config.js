// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è

const crypto = require('crypto');

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
function requireEnv(varName) {
  const value = process.env[varName];
  if (!value) {
    throw new Error(
      `üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ${varName} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!\n` +
      `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.`
    );
  }
  return value;
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–∞ (–¥–ª—è development)
function generateSecret() {
  return crypto.randomBytes(64).toString('hex');
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã
const isDevelopment = process.env.NODE_ENV !== 'production';
const isProduction = process.env.NODE_ENV === 'production';

// –í production —Å–µ–∫—Ä–µ—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!
let jwtSecret, sessionSecret;

if (isProduction) {
  jwtSecret = requireEnv('JWT_SECRET');
  sessionSecret = requireEnv('SESSION_SECRET');
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å–µ–∫—Ä–µ—Ç–æ–≤
  if (jwtSecret.length < 32) {
    throw new Error('JWT_SECRET —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π! –ú–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞.');
  }
  if (sessionSecret.length < 32) {
    throw new Error('SESSION_SECRET —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π! –ú–∏–Ω–∏–º—É–º 32 —Å–∏–º–≤–æ–ª–∞.');
  }
} else {
  // –í development –º–æ–∂–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å, –Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
  jwtSecret = process.env.JWT_SECRET || generateSecret();
  sessionSecret = process.env.SESSION_SECRET || generateSecret();
  
  if (!process.env.JWT_SECRET || !process.env.SESSION_SECRET) {
    console.warn('‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã!');
    console.warn('‚ö†Ô∏è  –î–ª—è production —Å–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–µ–∫—Ä–µ—Ç–∞–º–∏.');
    console.warn('‚ö†Ô∏è  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ–∫—Ä–µ—Ç—ã: node -e "console.log(require(\'crypto\').randomBytes(64).toString(\'hex\'))"');
  }
}

module.exports = {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
  server: {
    port: parseInt(process.env.PORT) || 3000,
    env: process.env.NODE_ENV || 'development',
    isDevelopment,
    isProduction
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  database: {
    path: process.env.DB_PATH || './database/college.db',
    // –î–ª—è production —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è PostgreSQL
    type: process.env.DB_TYPE || 'sqlite',
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    name: process.env.DB_NAME,
    user: process.env.DB_USER,
    password: process.env.DB_PASSWORD
  },

  // JWT –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  jwt: {
    secret: jwtSecret,
    expiresIn: process.env.JWT_EXPIRES_IN || '24h',
    refreshExpiresIn: process.env.JWT_REFRESH_EXPIRES_IN || '7d'
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–π
  session: {
    secret: sessionSecret,
    maxAge: parseInt(process.env.SESSION_MAX_AGE) || 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞
    secure: isProduction, // true —Ç–æ–ª—å–∫–æ –≤ production
    httpOnly: true,
    sameSite: isProduction ? 'strict' : 'lax',
    name: 'college_sid' // –ö–∞—Å—Ç–æ–º–Ω–æ–µ –∏–º—è —Å–µ—Å—Å–∏–∏
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
  cors: {
    origin: process.env.CORS_ORIGIN 
      ? process.env.CORS_ORIGIN.split(',').map(origin => origin.trim())
      : (isDevelopment ? ['http://localhost:3000', 'http://localhost:8080'] : []),
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'X-CSRF-Token'],
    exposedHeaders: ['X-Total-Count'],
    maxAge: 86400 // 24 hours
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  upload: {
    maxFileSize: parseInt(process.env.MAX_FILE_SIZE) || 50 * 1024 * 1024, // 50MB
    uploadPath: process.env.UPLOAD_PATH || './uploads',
    allowedTypes: ['.pdf', '.doc', '.docx', '.ppt', '.pptx', '.zip', '.rar', '.mp4', '.avi', '.jpg', '.jpeg', '.png'],
    allowedMimeTypes: [
      'application/pdf',
      'application/msword',
      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
      'application/vnd.ms-powerpoint',
      'application/vnd.openxmlformats-officedocument.presentationml.presentation',
      'application/zip',
      'application/x-rar-compressed',
      'video/mp4',
      'video/x-msvideo',
      'image/jpeg',
      'image/png'
    ]
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  security: {
    bcryptRounds: parseInt(process.env.BCRYPT_ROUNDS) || 10,
    passwordMinLength: parseInt(process.env.PASSWORD_MIN_LENGTH) || 12,
    requireStrongPasswords: process.env.REQUIRE_STRONG_PASSWORDS !== 'false',
    enableRateLimiting: process.env.ENABLE_RATE_LIMITING !== 'false',
    enableCSRFProtection: process.env.ENABLE_CSRF_PROTECTION !== 'false',
    
    // Rate limiting –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    rateLimit: {
      // –î–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      auth: {
        windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
        max: 5, // 5 –ø–æ–ø—ã—Ç–æ–∫
        message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      },
      // –î–ª—è API
      api: {
        windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
        max: 100, // 100 –∑–∞–ø—Ä–æ—Å–æ–≤
        message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      },
      // –î–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
      strict: {
        windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
        max: 10, // 10 –∑–∞–ø—Ä–æ—Å–æ–≤
        message: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
      }
    },
    
    // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ IP
    maxFailedAttempts: 5,
    lockoutDuration: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
    
    // Helmet –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    helmet: {
      contentSecurityPolicy: {
        directives: {
          defaultSrc: ["'self'"],
          styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
          fontSrc: ["'self'", "https://fonts.gstatic.com"],
          scriptSrc: ["'self'"],
          imgSrc: ["'self'", "data:", "https:"],
          connectSrc: ["'self'"],
          frameSrc: ["'none'"],
          objectSrc: ["'none'"],
          upgradeInsecureRequests: isProduction ? [] : null
        }
      },
      hsts: {
        maxAge: 31536000, // 1 –≥–æ–¥
        includeSubDomains: true,
        preload: true
      },
      noSniff: true,
      xssFilter: true,
      hidePoweredBy: true
    }
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  logging: {
    level: process.env.LOG_LEVEL || (isDevelopment ? 'debug' : 'info'),
    file: process.env.LOG_FILE || './logs/application.log',
    maxSize: '20m',
    maxFiles: '14d',
    
    // –ß—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
    logRequests: true,
    logErrors: true,
    logSecurity: true,
    logDatabase: isDevelopment
  },

  // Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  email: {
    enabled: process.env.SMTP_HOST ? true : false,
    smtp: {
      host: process.env.SMTP_HOST,
      port: parseInt(process.env.SMTP_PORT) || 587,
      secure: process.env.SMTP_SECURE === 'true',
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASSWORD
      }
    },
    from: process.env.EMAIL_FROM || 'noreply@college.ru',
    templates: {
      welcome: 'templates/email/welcome.html',
      passwordReset: 'templates/email/password-reset.html',
      notification: 'templates/email/notification.html'
    }
  },

  // –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
  twoFactor: {
    enabled: process.env['2FA_ENABLED'] === 'true',
    issuer: process.env['2FA_ISSUER'] || 'College System',
    window: 1 // –î–æ–ø—É—Å—Ç–∏–º–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  },

  // Backup –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  backup: {
    enabled: process.env.BACKUP_ENABLED === 'true',
    path: process.env.BACKUP_PATH || './backups',
    schedule: process.env.BACKUP_SCHEDULE || '0 2 * * *', // –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00
    retentionDays: parseInt(process.env.BACKUP_RETENTION_DAYS) || 30,
    compression: true,
    encryption: true
  }
};

// –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤!)
if (isDevelopment) {
  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:');
  console.log('  ‚Ä¢ –†–µ–∂–∏–º:', module.exports.server.env);
  console.log('  ‚Ä¢ –ü–æ—Ä—Ç:', module.exports.server.port);
  console.log('  ‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', module.exports.database.type);
  console.log('  ‚Ä¢ CORS origins:', module.exports.cors.origin.join(', '));
  console.log('  ‚Ä¢ Rate limiting:', module.exports.security.enableRateLimiting ? '‚úÖ' : '‚ùå');
  console.log('  ‚Ä¢ CSRF –∑–∞—â–∏—Ç–∞:', module.exports.security.enableCSRFProtection ? '‚úÖ' : '‚ùå');
  console.log('  ‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:', module.exports.logging.level);
}

